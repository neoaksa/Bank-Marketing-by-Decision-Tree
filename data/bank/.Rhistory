threshold = 0.60, warn.non.IUPAC = FALSE, type = c("DNA", "RNA"))
install.packages("entropy")
# load entropy library
library("entropy")
x1 = runif(10000)
x1 = runif(10000)
x1
hist(x1, xlim=c(0,1), freq=FALSE)
y1 = discretize(x1, numBins=10, r=c(0,1))
y1
install.packages("ROSE")
# Read CSV into R
MyData <- read.csv(file="bank-full.csv", header=TRUE, sep=";")
table(MyData$y)
# delete month
MyData = subset(MyData,select = -c(month,contact,duration))
# shuffle data
MyData <- MyData[sample(1:nrow(MyData)),]
setwd("~/Google Drive/gvsu/course/CIS678/Bank Marketing by Decision Tree/code")
setwd("~/Google Drive/gvsu/course/CIS678/Bank Marketing by Decision Tree/data")
setwd("~/Google Drive/gvsu/course/CIS678/Bank Marketing by Decision Tree/data/bank")
setwd("~/Google Drive/gvsu/course/CIS678/Bank Marketing by Decision Tree/data/bank")
# Read CSV into R
MyData <- read.csv(file="bank-full.csv", header=TRUE, sep=";")
table(MyData$y)
# delete month
MyData = subset(MyData,select = -c(month,contact,duration))
# shuffle data
MyData <- MyData[sample(1:nrow(MyData)),]
library(ROSE)
MyData <- vun.sample(y ~ ., data = MyData, method = "over",N = 20000)$data
ovun.sample(y ~ ., data = MyData, method = "over",N = 20000)$data
ovun.sample(y ~ ., data = MyData, method = "over",N = 60000)$data
MyData <- ovun.sample(y ~ ., data = MyData, method = "over",N = 60000)$data
table(MyData$y)
x <- MyData[1:50000,1:13]
y <- MyData[1:50000,14]
testx <- MyData[50001:60000,1:13]
testy <- MyData[50001:60000,14]
fit <- C5.0(x,y, control = C5.0Control(earlyStopping = TRUE, minCases = 10))
library(C50)
# grow tree
fit <- C5.0(x,y, control = C5.0Control(earlyStopping = TRUE, minCases = 10))
summary(fit) # detailed summary of splits
p <- predict(fit, testy, type="class")
sum(p==testy)/length(p)
summary(fit) #
p <- predict(fit, testy, type="class")
sum(p==testy)/length(p)
p <- predict(fit, testy, type="class")
plot(p,testy)
setwd("~/Google Drive/gvsu/course/CIS678/Bank Marketing by Decision Tree/data/bank")
# Read CSV into R
MyData <- read.csv(file="bank-full.csv", header=TRUE, sep=";")
table(MyData$y)
# delete month
MyData = subset(MyData,select = -c(month,contact,duration))
# shuffle data
MyData <- MyData[sample(1:nrow(MyData)),]
library(ROSE)
MyData <- ovun.sample(y ~ ., data = MyData, method = "over",N = 60000)$data
library(C50)
x <- MyData[1:50000,1:13]
y <- MyData[1:50000,14]
testx <- MyData[50001:60000,1:13]
testy <- MyData[50001:60000,14]
# grow tree
fit <- C5.0(x,y, control = C5.0Control(earlyStopping = TRUE, minCases = 10))
# printcp(fit) # display the results
# plotcp(fit) # visualize cross-validation results
summary(fit) # detailed summary of splits
p <- predict(fit, testy, type="class")
testy
MyData
setwd("~/Google Drive/gvsu/course/CIS678/Bank Marketing by Decision Tree/data/bank")
# Read CSV into R
MyData <- read.csv(file="bank-full.csv", header=TRUE, sep=";")
table(MyData$y)
# delete month
MyData = subset(MyData,select = -c(month,contact,duration))
library(ROSE)
MyData <- ovun.sample(y ~ ., data = MyData, method = "over",N = 60000)$data
# shuffle data
MyData <- MyData[sample(1:nrow(MyData)),]
library(C50)
x <- MyData[1:50000,1:13]
y <- MyData[1:50000,14]
testx <- MyData[50001:60000,1:13]
testy <- MyData[50001:60000,14]
testy
testx
fit <- C5.0(x,y, control = C5.0Control(earlyStopping = TRUE, minCases = 10))
p <- predict(fit, testy, type="class")
fit
testy
summary(fit)
p <- predict(fit, testy, type="class")
testy
fit
p <- predict(fit, testx, type="class")
sum(p==testy)/length(p)
plot(p,testy)
plot(fit)
plot(fit)
plot(fit)
fit <- C5.0(x,y, control = C5.0Control(earlyStopping = TRUE, minCases = 50))
summary(fit)
plot(fit)
fit <- C5.0(x,y, control = C5.0Control(earlyStopping = TRUE, minCases = 150))
summary(fit)
p <- predict(fit, testx, type="class")
sum(p==testy)/length(p)
plot(p,testy)
plot(fit)
# grow tree
fit <- C5.0(x,y, control = C5.0Control(earlyStopping = TRUE, minCases = 500))
summary(fit)
# grow tree
fit <- C5.0(x,y, control = C5.0Control(earlyStopping = TRUE, minCases = 1000))
summary(fit) # de
p <- predict(fit, testx, type="class")
sum(p==testy)/length(p)
plot(p,testy)
plot(fit)
setwd("~/Google Drive/gvsu/course/CIS678/Bank Marketing by Decision Tree/data/bank")
# Read CSV into R
MyData <- read.csv(file="bank-full.csv", header=TRUE, sep=";")
table(MyData$y)
setwd("~/Google Drive/gvsu/course/CIS678/Bank Marketing by Decision Tree/data/bank")
# Read CSV into R
MyData <- read.csv(file="bank-full.csv", header=TRUE, sep=";")
table(MyData$y)
# delete month
MyData = subset(MyData,select = -c(month,contact,duration))
# shuffle data
MyData <- MyData[sample(1:nrow(MyData)),]
# test data
MyValidation <- MyData[40001:45211,]
MyTrain <- MyData[1:40000]
library(ROSE)
MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "over",N = 60000)$data
# shuffle data
MyTrain <- MyTrain[sample(1:nrow(MyTrain)),]
library(C50)
x <- MyTrain[,1:13]
y <- MyTrain[,14]
testx <- MyValidation[,1:13]
testy <- MyValidation[,14]
# grow tree
fit <- C5.0(x,y, control = C5.0Control(earlyStopping = TRUE, minCases = 1000))
setwd("~/Google Drive/gvsu/course/CIS678/Bank Marketing by Decision Tree/data/bank")
# Read CSV into R
MyData <- read.csv(file="bank-full.csv", header=TRUE, sep=";")
table(MyData$y)
# delete month
MyData = subset(MyData,select = -c(month,contact,duration))
# shuffle data
MyData <- MyData[sample(1:nrow(MyData)),]
# test data
MyValidation <- MyData[40001:45211,]
MyTrain <- MyData[1:40000]
setwd("~/Google Drive/gvsu/course/CIS678/Bank Marketing by Decision Tree/data/bank")
# Read CSV into R
MyData <- read.csv(file="bank-full.csv", header=TRUE, sep=";")
table(MyData$y)
# delete month
MyData = subset(MyData,select = -c(month,contact,duration))
# shuffle data
MyData <- MyData[sample(1:nrow(MyData)),]
# test data
MyValidation <- MyData[40001:45211,]
MyTrain <- MyData[1:40000,]
library(ROSE)
MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "over",N = 60000)$data
# shuffle data
MyTrain <- MyTrain[sample(1:nrow(MyTrain)),]
library(C50)
x <- MyTrain[,1:13]
y <- MyTrain[,14]
testx <- MyValidation[,1:13]
testy <- MyValidation[,14]
# grow tree
fit <- C5.0(x,y, control = C5.0Control(earlyStopping = TRUE, minCases = 1000))
p <- predict(fit, testx, type="class")
sum(p==testy)/length(p)
testx
plot(fit)
# grow tree
fit <- C5.0(x,y, control = C5.0Control(earlyStopping = TRUE, minCases = 50))
summary(fit)
p <- predict(fit, testx, type="class")
sum(p==testy)/length(p)
plot(p,testy)
table(testy)
# grow tree
fit <- C5.0(x,y, control = C5.0Control(earlyStopping = TRUE, minCases = 10))
# plotcp(fit) # visualize cross-validation results
summary(fit)
p <- predict(fit, testx, type="class")
sum(p==testy)/length(p)
table(MyData$y)
MyTrain
table(MyTrain)
table(y)
p <- predict(fit, testx, type="class")
sum(p==testy)/length(p)
plot(p,testy)
testy
table(testy)
View(MyData)
View(MyData)
summary(fit)
fit
setwd("~/Google Drive/gvsu/course/CIS678/Bank Marketing by Decision Tree/data/bank")
# Read CSV into R
MyData <- read.csv(file="bank-full.csv", header=TRUE, sep=";")
table(MyData$y)
# delete month
MyData = subset(MyData,select = -c(month,contact,duration))
# shuffle data
MyData <- MyData[sample(1:nrow(MyData)),]
# test data
MyValidation <- MyData[40001:45211,]
MyTrain <- MyData[1:40000,]
library(ROSE)
MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "under",N = 10000)$data
# shuffle data
MyTrain <- MyTrain[sample(1:nrow(MyTrain)),]
library(C50)
x <- MyTrain[,1:13]
y <- MyTrain[,14]
table(y)
testx <- MyValidation[,1:13]
testy <- MyValidation[,14]
table(testy)
# grow tree
fit <- C5.0(x,y, control = C5.0Control(earlyStopping = TRUE, minCases = 10))
summary(fit)
p <- predict(fit, testx, type="class")
sum(p==testy)/length(p)
table(y)
table(testy)
# shuffle data
MyTrain <- MyTrain[sample(1:nrow(MyTrain)),]
setwd("~/Google Drive/gvsu/course/CIS678/Bank Marketing by Decision Tree/data/bank")
# Read CSV into R
MyData <- read.csv(file="bank-full.csv", header=TRUE, sep=";")
table(MyData$y)
# delete month
MyData = subset(MyData,select = -c(month,contact,duration))
# shuffle data
MyData <- MyData[sample(1:nrow(MyData)),]
# test data
MyValidation <- MyData[40001:45211,]
MyTrain <- MyData[1:40000,]
library(ROSE)
# MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "over",N = 60000)$data
MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "under",N = 20000, seed =1)$data
# MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "over",N = 60000)$data
# shuffle data
MyTrain <- MyTrain[sample(1:nrow(MyTrain)),]
library(C50)
x <- MyTrain[,1:13]
y <- MyTrain[,14]
table(y)
testx <- MyValidation[,1:13]
testy <- MyValidation[,14]
table(testy)
# grow tree
fit <- C5.0(x,y, control = C5.0Control(earlyStopping = TRUE, minCases = 10))
# plotcp(fit) # visualize cross-validation results
summary(fit) #
# validation
p <- predict(fit, testx, type="class")
sum(p==testy)/length(p)
setwd("~/Google Drive/gvsu/course/CIS678/Bank Marketing by Decision Tree/data/bank")
# Read CSV into R
MyData <- read.csv(file="bank-full.csv", header=TRUE, sep=";")
table(MyData$y)
# delete month
MyData = subset(MyData,select = -c(month,contact,duration))
# shuffle data
MyData <- MyData[sample(1:nrow(MyData)),]
# test data
MyValidation <- MyData[40001:45211,]
MyTrain <- MyData[1:40000,]
library(ROSE)
# MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "over",N = 60000)$data
# MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "under",N = 20000, seed =1)$data
MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "both",N = 30000, seed=1)$data
# shuffle data
MyTrain <- MyTrain[sample(1:nrow(MyTrain)),]
library(C50)
x <- MyTrain[,1:13]
y <- MyTrain[,14]
table(y)
testx <- MyValidation[,1:13]
testy <- MyValidation[,14]
table(testy)
# grow tree
fit <- C5.0(x,y, control = C5.0Control(earlyStopping = TRUE, minCases = 10))
summary(fit)
p <- predict(fit, testx, type="class")
sum(p==testy)/length(p)
MyData <- MyData[sample(1:nrow(MyData)),]
# test data
MyValidation <- MyData[40001:45211,]
MyTrain <- MyData[1:40000,]
library(ROSE)
# MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "over",N = 60000)$data
MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "under",N = 20000, seed =1)$data
# MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "both",N = 30000, seed=1)$data
# shuffle data
MyTrain <- MyTrain[sample(1:nrow(MyTrain)),]
library(C50)
x <- MyTrain[,1:13]
y <- MyTrain[,14]
table(y)
testx <- MyValidation[,1:13]
testy <- MyValidation[,14]
table(testy)
# grow tree
fit <- C5.0(x,y, control = C5.0Control(earlyStopping = TRUE, minCases = 10))
# printcp(fit) # display the results
# plotcp(fit) # visualize cross-validation results
summary(fit) # detailed summary of splits
# validation
p <- predict(fit, testx, type="class")
sum(p==testy)/length(p)
MyValidation
View(MyData)
setwd("~/Google Drive/gvsu/course/CIS678/Bank Marketing by Decision Tree/data/bank")
# Read CSV into R
MyData <- read.csv(file="bank-full.csv", header=TRUE, sep=";")
table(MyData$y)
# delete month
MyData = subset(MyData,select = -c(month,contact,duration))
# shuffle data
MyData <- MyData[sample(1:nrow(MyData)),]
# test data
MyValidation <- MyData[40001:45211,]
MyTrain <- MyData[1:40000,]
library(ROSE)
# MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "over",N = 60000)$data
MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "under",N = 20000, seed =1)$data
# MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "both",N = 30000, seed=1)$data
# shuffle data
MyTrain <- MyTrain[sample(1:nrow(MyTrain)),]
library(C50)
x <- MyTrain[,1:13]
y <- MyTrain[,14]
table(y)
MyValidation <- ovun.sample(y ~ ., data = MyTrain, method = "both",N = 30000, seed=1)$data
# shuffle data
MyValidation <- MyData[sample(1:nrow(MyValidation)),]
testx <- MyValidation[,1:13]
testy <- MyValidation[,14]
table(testy)
# grow tree
fit <- C5.0(x,y, control = C5.0Control(earlyStopping = TRUE, minCases = 10))
# printcp(fit) # display the results
# plotcp(fit) # visualize cross-validation results
summary(fit) # detailed summary of splits
# validation
p <- predict(fit, testx, type="class")
sum(p==testy)/length(p)
table(testy)
setwd("~/Google Drive/gvsu/course/CIS678/Bank Marketing by Decision Tree/data/bank")
# Read CSV into R
MyData <- read.csv(file="bank-full.csv", header=TRUE, sep=";")
table(MyData$y)
# delete month
MyData = subset(MyData,select = -c(month,contact,duration))
# shuffle data
MyData <- MyData[sample(1:nrow(MyData)),]
# test data
MyValidation <- MyData[40001:45211,]
MyTrain <- MyData[1:40000,]
library(ROSE)
# MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "over",N = 60000)$data
MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "under",N = 20000, seed =1)$data
# MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "both",N = 30000, seed=1)$data
# shuffle data
MyTrain <- MyTrain[sample(1:nrow(MyTrain)),]
library(C50)
x <- MyTrain[,1:13]
y <- MyTrain[,14]
table(y)
MyValidation <- ovun.sample(y ~ ., data = MyValidation, method = "both",N = 30000, seed=1)$data
# shuffle data
MyValidation <- MyData[sample(1:nrow(MyValidation)),]
testx <- MyValidation[,1:13]
testy <- MyValidation[,14]
table(testy)
# grow tree
fit <- C5.0(x,y, control = C5.0Control(earlyStopping = TRUE, minCases = 10))
# printcp(fit) # display the results
# plotcp(fit) # visualize cross-validation results
summary(fit) # detailed summary of splits
# validation
p <- predict(fit, testx, type="class")
sum(p==testy)/length(p)
table(testy)
MyValidation
setwd("~/Google Drive/gvsu/course/CIS678/Bank Marketing by Decision Tree/data/bank")
# Read CSV into R
MyData <- read.csv(file="bank-full.csv", header=TRUE, sep=";")
table(MyData$y)
# delete month
MyData = subset(MyData,select = -c(month,contact,duration))
# shuffle data
MyData <- MyData[sample(1:nrow(MyData)),]
# test data
MyValidation <- MyData[40001:45211,]
MyTrain <- MyData[1:40000,]
library(ROSE)
# MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "over",N = 60000)$data
MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "under",N = 20000, seed =1)$data
# MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "both",N = 30000,  p=0.5,seed=1)$data
# shuffle data
MyTrain <- MyTrain[sample(1:nrow(MyTrain)),]
library(C50)
x <- MyTrain[,1:13]
y <- MyTrain[,14]
table(y)
MyValidation <- ovun.sample(y ~ ., data = MyValidation, method = "both",N = 30000, p=0.5,seed=1)$data
# shuffle data
MyValidation <- MyData[sample(1:nrow(MyValidation)),]
testx <- MyValidation[,1:13]
testy <- MyValidation[,14]
table(testy)
# grow tree
fit <- C5.0(x,y, control = C5.0Control(earlyStopping = TRUE, minCases = 10))
# printcp(fit) # display the results
# plotcp(fit) # visualize cross-validation results
summary(fit) # detailed summary of splits
# validation
p <- predict(fit, testx, type="class")
sum(p==testy)/length(p)
table(testy)
setwd("~/Google Drive/gvsu/course/CIS678/Bank Marketing by Decision Tree/data/bank")
# Read CSV into R
MyData <- read.csv(file="bank-full.csv", header=TRUE, sep=";")
table(MyData$y)
# delete month
MyData = subset(MyData,select = -c(month,contact,duration))
# shuffle data
MyData <- MyData[sample(1:nrow(MyData)),]
# test data
MyValidation <- MyData[40001:45211,]
MyTrain <- MyData[1:40000,]
library(ROSE)
# MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "over",N = 60000)$data
MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "under",N = 20000, seed =1)$data
# MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "both",N = 30000,  p=0.5,seed=1)$data
# shuffle data
MyTrain <- MyTrain[sample(1:nrow(MyTrain)),]
library(C50)
x <- MyTrain[,1:13]
y <- MyTrain[,14]
table(y)
MyValidation <- ovun.sample(y ~ ., data = MyValidation, method = "both",N = 60000, p=0.5,seed=1)$data
# shuffle data
MyValidation <- MyData[sample(1:nrow(MyValidation)),]
testx <- MyValidation[,1:13]
testy <- MyValidation[,14]
table(testy)
# grow tree
fit <- C5.0(x,y, control = C5.0Control(earlyStopping = TRUE, minCases = 10))
# printcp(fit) # display the results
# plotcp(fit) # visualize cross-validation results
summary(fit) # detailed summary of splits
# validation
p <- predict(fit, testx, type="class")
sum(p==testy)/length(p)
table(testy)
setwd("~/Google Drive/gvsu/course/CIS678/Bank Marketing by Decision Tree/data/bank")
# Read CSV into R
MyData <- read.csv(file="bank-full.csv", header=TRUE, sep=";")
table(MyData$y)
# delete month
MyData = subset(MyData,select = -c(month,contact,duration))
# shuffle data
MyData <- MyData[sample(1:nrow(MyData)),]
# test data
MyValidation <- MyData[40001:45211,]
MyTrain <- MyData[1:40000,]
library(ROSE)
# MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "over",N = 60000)$data
MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "under",N = 20000, seed =1)$data
# MyTrain <- ovun.sample(y ~ ., data = MyTrain, method = "both",N = 30000,  p=0.5,seed=1)$data
# shuffle data
MyTrain <- MyTrain[sample(1:nrow(MyTrain)),]
library(C50)
x <- MyTrain[,1:13]
y <- MyTrain[,14]
table(y)
MyValidation <- ovun.sample(y ~ ., data = MyValidation, method = "both",N = 10000, p=0.5,seed=1)$data
# shuffle data
MyValidation <- MyData[sample(1:nrow(MyValidation)),]
testx <- MyValidation[,1:13]
testy <- MyValidation[,14]
table(testy)
# grow tree
fit <- C5.0(x,y, control = C5.0Control(earlyStopping = TRUE, minCases = 10))
# printcp(fit) # display the results
# plotcp(fit) # visualize cross-validation results
summary(fit) # detailed summary of splits
# validation
p <- predict(fit, testx, type="class")
sum(p==testy)/length(p)
table(testy)
